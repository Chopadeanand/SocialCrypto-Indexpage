[{"C:\\Users\\Anand Ganesh Chopade\\SocialCrypto-Crowdfunding\\SocialCrypto-Indexpage\\src\\index.js":"1","C:\\Users\\Anand Ganesh Chopade\\SocialCrypto-Crowdfunding\\SocialCrypto-Indexpage\\src\\App.js":"2","C:\\Users\\Anand Ganesh Chopade\\SocialCrypto-Crowdfunding\\SocialCrypto-Indexpage\\src\\reportWebVitals.js":"3","C:\\Users\\Anand Ganesh Chopade\\SocialCrypto-Crowdfunding\\SocialCrypto-Indexpage\\src\\components\\NavBar.js":"4","C:\\Users\\Anand Ganesh Chopade\\SocialCrypto-Crowdfunding\\SocialCrypto-Indexpage\\src\\components\\Footer.js":"5","C:\\Users\\Anand Ganesh Chopade\\SocialCrypto-Crowdfunding\\SocialCrypto-Indexpage\\src\\components\\WhyUs.js":"6","C:\\Users\\Anand Ganesh Chopade\\SocialCrypto-Crowdfunding\\SocialCrypto-Indexpage\\src\\components\\AboutUs.js":"7","C:\\Users\\Anand Ganesh Chopade\\SocialCrypto-Crowdfunding\\SocialCrypto-Indexpage\\src\\components\\Banner.js":"8","C:\\Users\\Anand Ganesh Chopade\\SocialCrypto-Crowdfunding\\SocialCrypto-Indexpage\\src\\components\\Contact.js":"9"},{"size":535,"mtime":1699093750875,"results":"10","hashOfConfig":"11"},{"size":573,"mtime":1699093750861,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1699093750861,"results":"13","hashOfConfig":"11"},{"size":2077,"mtime":1700811840713,"results":"14","hashOfConfig":"11"},{"size":551,"mtime":1699093751042,"results":"15","hashOfConfig":"11"},{"size":2226,"mtime":1699093751058,"results":"16","hashOfConfig":"11"},{"size":1035,"mtime":1699093751097,"results":"17","hashOfConfig":"11"},{"size":853,"mtime":1699093751025,"results":"18","hashOfConfig":"11"},{"size":2610,"mtime":1699093751058,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vndvgv",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},"C:\\Users\\Anand Ganesh Chopade\\SocialCrypto-Crowdfunding\\SocialCrypto-Indexpage\\src\\index.js",[],[],"C:\\Users\\Anand Ganesh Chopade\\SocialCrypto-Crowdfunding\\SocialCrypto-Indexpage\\src\\App.js",["52"],[],"import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { NavBar } from \"./components/NavBar\";\nimport { Banner } from \"./components/Banner\";\nimport { WhyUs } from \"./components/WhyUs\";\nimport { AboutUs } from \"./components/AboutUs\";\nimport { Contact } from \"./components/Contact\";\nimport { Footer } from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Banner />\n      <WhyUs />\n      <AboutUs />\n      <Contact />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Anand Ganesh Chopade\\SocialCrypto-Crowdfunding\\SocialCrypto-Indexpage\\src\\reportWebVitals.js",[],[],"C:\\Users\\Anand Ganesh Chopade\\SocialCrypto-Crowdfunding\\SocialCrypto-Indexpage\\src\\components\\NavBar.js",["53"],[],"C:\\Users\\Anand Ganesh Chopade\\SocialCrypto-Crowdfunding\\SocialCrypto-Indexpage\\src\\components\\Footer.js",[],[],"C:\\Users\\Anand Ganesh Chopade\\SocialCrypto-Crowdfunding\\SocialCrypto-Indexpage\\src\\components\\WhyUs.js",["54","55","56","57","58"],[],"import meter1 from \"../assets/img/meter1.svg\";\nimport meter2 from \"../assets/img/meter2.svg\";\nimport meter3 from \"../assets/img/meter3.svg\";\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\n\nimport colorSharp from \"../assets/img/color-sharp.png\"\n\nexport const WhyUs = () => {\n  const responsive = {\n    superLargeDesktop: {\n      // the naming can be any, depends on you.\n      breakpoint: { max: 4000, min: 3000 },\n      items: 5\n    },\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 3\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 2\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1\n    }\n  };\n\n  return (\n    <section className=\"skill\" id=\"skills\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"skill-bx wow zoomIn\">\n                        <h2>Why US?</h2>\n                        <p>Let us make this wolrd a better place to live together.</p>\n                        <Carousel responsive={responsive} infinite={true} className=\"owl-carousel owl-theme skill-slider\">\n                            <div className=\"item\">\n                                <img src={meter1} alt=\"Image\" />\n                                <h5>Security</h5>\n                            </div>\n                            <div className=\"item\">\n                                <img src={meter1} alt=\"Image\" />\n                                <h5>Speed</h5>\n                            </div>\n                            <div className=\"item\">\n                                <img src={meter3} alt=\"Image\" />\n                                <h5>Transparency</h5>\n                            </div>\n                            <div className=\"item\">\n                                <img src={meter2} alt=\"Image\" />\n                                <h5>Easy Transfer</h5>\n                            </div>\n                        </Carousel>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <img className=\"background-image-left\" src={colorSharp} alt=\"Image\" />\n    </section>\n  )\n}\n","C:\\Users\\Anand Ganesh Chopade\\SocialCrypto-Crowdfunding\\SocialCrypto-Indexpage\\src\\components\\AboutUs.js",["59","60","61"],[],"import { Container, Row, Col, Tab, Nav } from \"react-bootstrap\";\nimport colorSharp2 from \"../assets/img/color-sharp2.png\";\nimport 'animate.css';\nimport TrackVisibility from 'react-on-screen';\n\nexport const AboutUs = () => {\n\n\n  return (\n    <section className=\"project\" id=\"project\">\n      <Container>\n        <Row>\n          <Col size={12}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n              <div className={isVisible ? \"animate__animated animate__fadeIn\": \"\"}>\n                <h2>About Us</h2>\n                <p>We are a crowdfunding platform with a vision to create a social impact.Our unique model allows people from across the globe to donate towards raising funds using cryptocurrency for products required by NGOs and charities in India, which are then delivered to them directly. </p>\n               \n              </div>}\n            </TrackVisibility>\n          </Col>\n        </Row>\n      </Container>\n      <img className=\"background-image-right\" src={colorSharp2}></img>\n    </section>\n  )\n }\n","C:\\Users\\Anand Ganesh Chopade\\SocialCrypto-Crowdfunding\\SocialCrypto-Indexpage\\src\\components\\Banner.js",["62","63"],[],"import { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport TrackVisibility from 'react-on-screen';\n\nexport const Banner = () => {\n  \n  const [text, setText] = useState('');\n\n  return (\n    <section className=\"banner\" id=\"home\">\n      <Container>\n        <Row className=\"aligh-items-center\">\n          <Col xs={12} md={6} xl={7} className=\"main_text\">\n            <TrackVisibility>\n              {({ isVisible }) =>\n              <div className=\"welcome\">\n                <h1>{`Welcome to SocialCrypto`} \n                {text}</h1>\n                  <p>A platform for do-gooders with a will to make a change in the world or at least in the lives of people who deserve better.</p>\n              </div>}\n            </TrackVisibility>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  )\n}\n","C:\\Users\\Anand Ganesh Chopade\\SocialCrypto-Crowdfunding\\SocialCrypto-Indexpage\\src\\components\\Contact.js",["64"],[],"import { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport contactImg from \"../assets/img/contact-img.svg\";\nimport 'animate.css';\nimport TrackVisibility from 'react-on-screen';\nimport { useForm } from '@formcarry/react';\n\n\nexport const Contact = () => {\n\n\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  function submit(e) {\n    // This will prevent page refresh\n    e.preventDefault();\n\n    // replace this with your own unique endpoint URL\n    fetch(\"https://formcarry.com/s/9ezlXe7tZr\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({ email: email, message: message })\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.code === 200) {\n          setSubmitted(true);\n        } else {\n          setError(res.message);\n        }\n      })\n      .catch((error) => setError(error));\n  }\n\n  if (error) {\n    alert({error});\n  }\n\n  if (submitted) {\n    alert(\"We've received your message, thank you for contacting us!\");\n  }\n  \n\n  \n\n\n  \n\n  return (\n    <section className=\"contact\" id=\"connect\">\n      <Container>\n        <Row className=\"align-items-center\">\n          <Col size={12} md={6}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n                <img className={isVisible ? \"animate__animated animate__zoomIn\" : \"\"} src={contactImg} alt=\"Contact Us\"/>\n              }\n            </TrackVisibility>\n          </Col>\n          <Col size={12} md={6}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n                <div className={isVisible ? \"animate__animated animate__fadeIn\" : \"\"}>\n                <h2>Get In Touch</h2>\n\n                <form onSubmit={submit}>\n                <label htmlFor=\"email\">Email</label>\n                <input\n                id=\"email\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n                />\n\n                <label htmlFor=\"message\">Message</label>\n                <textarea\n                id=\"message\"\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n                />\n\n                <button type=\"submit\">Send</button>\n              </form>    \n\n              </div>}\n            </TrackVisibility>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  )\n}\n",{"ruleId":"65","severity":1,"message":"66","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":12},{"ruleId":"65","severity":1,"message":"69","line":4,"column":10,"nodeType":"67","messageId":"68","endLine":4,"endColumn":18},{"ruleId":"70","severity":1,"message":"71","line":40,"column":33,"nodeType":"72","endLine":40,"endColumn":65},{"ruleId":"70","severity":1,"message":"71","line":44,"column":33,"nodeType":"72","endLine":44,"endColumn":65},{"ruleId":"70","severity":1,"message":"71","line":48,"column":33,"nodeType":"72","endLine":48,"endColumn":65},{"ruleId":"70","severity":1,"message":"71","line":52,"column":33,"nodeType":"72","endLine":52,"endColumn":65},{"ruleId":"70","severity":1,"message":"71","line":60,"column":9,"nodeType":"72","endLine":60,"endColumn":79},{"ruleId":"65","severity":1,"message":"73","line":1,"column":31,"nodeType":"67","messageId":"68","endLine":1,"endColumn":34},{"ruleId":"65","severity":1,"message":"74","line":1,"column":36,"nodeType":"67","messageId":"68","endLine":1,"endColumn":39},{"ruleId":"75","severity":1,"message":"76","line":25,"column":7,"nodeType":"72","endLine":25,"endColumn":65},{"ruleId":"65","severity":1,"message":"77","line":1,"column":20,"nodeType":"67","messageId":"68","endLine":1,"endColumn":29},{"ruleId":"65","severity":1,"message":"78","line":7,"column":16,"nodeType":"67","messageId":"68","endLine":7,"endColumn":23},{"ruleId":"65","severity":1,"message":"79","line":6,"column":10,"nodeType":"67","messageId":"68","endLine":6,"endColumn":17},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'HashLink' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Tab' is defined but never used.","'Nav' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'setText' is assigned a value but never used.","'useForm' is defined but never used."]