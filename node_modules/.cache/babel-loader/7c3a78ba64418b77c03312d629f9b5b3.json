{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useForm = void 0;\nvar react_1 = require(\"react\");\nvar handler_1 = require(\"./lib/handler\");\nfunction useForm(props) {\n  var id = props.id,\n    _a = props.debug,\n    debug = _a === void 0 ? true : _a,\n    extraData = props.extraData;\n  var _b = react_1.useState(false),\n    submitted = _b[0],\n    setSubmitted = _b[1];\n  var _c = react_1.useState(false),\n    submitting = _c[0],\n    setSubmitting = _c[1];\n  var _d = react_1.useState(undefined),\n    error = _d[0],\n    setError = _d[1];\n  var _e = react_1.useState(),\n    response = _e[0],\n    setResponse = _e[1];\n  react_1.useEffect(function () {\n    if (error && debug) {\n      handler_1.errorHandler(error);\n    }\n  }, [debug, error]);\n  function submit(event) {\n    event.preventDefault();\n    if (!id) {\n      handler_1.noIdHandler();\n      return;\n    }\n    var data = new FormData(event.currentTarget);\n    if (typeof extraData === 'object') {\n      for (var item in extraData) {\n        if (extraData.hasOwnProperty(item)) {\n          data.append(item, extraData[item]);\n        }\n      }\n    }\n    setSubmitted(false);\n    setError(undefined);\n    setResponse(undefined);\n    setSubmitting(true);\n    fetch(\"https://formcarry.com/s/\" + id, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json'\n      },\n      body: data\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      if (res.code === 200) {\n        setSubmitted(true);\n        setResponse(res);\n      } else {\n        setError(res);\n      }\n    }).catch(function (err) {\n      setError(err);\n    }).finally(function () {\n      setSubmitting(false);\n    });\n  }\n  return {\n    state: {\n      error: error,\n      response: response,\n      submitting: submitting,\n      submitted: submitted\n    },\n    submit: submit\n  };\n}\nexports.useForm = useForm;","map":{"version":3,"mappings":";;;;;;AAAA;AAEA;AAEA,SAASA,OAAOA,CAACC,KAAY;EACpB,MAAE,GAA8BA,KAAK,GAAnC;IAAEC,KAA4BD,KAAK,MAArB;IAAZE,KAAK,mBAAG,IAAI;IAAEC,SAAS,GAAKH,KAAK,UAAV;EAC7B,SAA4BI,gBAAQ,CAAU,KAAK,CAAC;IAAnDC,SAAS;IAAEC,YAAY,QAA4B;EACpD,SAA8BF,gBAAQ,CAAU,KAAK,CAAC;IAArDG,UAAU;IAAEC,aAAa,QAA4B;EACtD,SAAoBJ,gBAAQ,CAACK,SAAS,CAAC;IAAtCC,KAAK;IAAEC,QAAQ,QAAuB;EACvC,SAA0BP,gBAAQ,EAAqB;IAAtDQ,QAAQ;IAAEC,WAAW,QAAiC;EAE7DT,iBAAS,CAAC;IACT,IAAIM,KAAK,IAAIR,KAAK,EAAE;MACnBY,sBAAY,CAACJ,KAAK,CAAC;;EAErB,CAAC,EAAE,CAACR,KAAK,EAAEQ,KAAK,CAAC,CAAC;EAElB,SAASK,MAAMA,CAACC,KAAuC;IAEtDA,KAAK,CAACC,cAAc,EAAE;IAEtB,IAAI,CAACC,EAAE,EAAE;MACRJ,qBAAW,EAAE;MACb;;IAGD,IAAMK,IAAI,GAAG,IAAIC,QAAQ,CAACJ,KAAK,CAACK,aAAa,CAAC;IAE9C,IAAI,OAAOlB,SAAS,KAAK,QAAQ,EAAE;MAClC,KAAK,IAAMmB,IAAI,IAAInB,SAAS,EAAE;QAC7B,IAAIA,SAAS,CAACoB,cAAc,CAACD,IAAI,CAAC,EAAE;UACnCH,IAAI,CAACK,MAAM,CAACF,IAAI,EAAEnB,SAAS,CAACmB,IAAI,CAAC,CAAC;;;;IAMrChB,YAAY,CAAC,KAAK,CAAC;IACnBK,QAAQ,CAACF,SAAS,CAAC;IACnBI,WAAW,CAACJ,SAAS,CAAC;IAEtBD,aAAa,CAAC,IAAI,CAAC;IAEnBiB,KAAK,CAAC,6BAA2BP,EAAI,EAAE;MACtCQ,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAEC,MAAM,EAAE;MAAkB,CAAE;MACvCC,IAAI,EAAEV;KACN,CAAC,CACAW,IAAI,CAAC,aAAG;MAAI,UAAG,CAACC,IAAI,EAAE;IAAV,CAAU,CAAC,CACvBD,IAAI,CAAC,UAACE,GAAsB;MAC5B,IAAIA,GAAG,CAACC,IAAI,KAAK,GAAG,EAAE;QACrB3B,YAAY,CAAC,IAAI,CAAC;QAClBO,WAAW,CAACmB,GAAG,CAAC;OAChB,MAAM;QACNrB,QAAQ,CAACqB,GAAG,CAAC;;IAEf,CAAC,CAAC,CACDE,KAAK,CAAC,aAAG;MACTvB,QAAQ,CAACwB,GAAG,CAAC;IACd,CAAC,CAAC,CACDC,OAAO,CAAC;MACR5B,aAAa,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACJ;EAEA,OAAO;IAAE6B,KAAK,EAAE;MAAE3B,KAAK;MAAEE,QAAQ;MAAEL,UAAU;MAAEF,SAAS;IAAA,CAAE;IAAEU,MAAM;EAAA,CAAE;AACrE;AAESuB","names":["useForm","props","_a","debug","extraData","react_1","submitted","setSubmitted","submitting","setSubmitting","undefined","error","setError","response","setResponse","handler_1","submit","event","preventDefault","id","data","FormData","currentTarget","item","hasOwnProperty","append","fetch","method","headers","Accept","body","then","json","res","code","catch","err","finally","state","exports"],"sources":["C:\\Users\\Anand Ganesh Chopade\\SocialCrypto-Indexpage\\node_modules\\@formcarry\\react\\src\\useForm.ts"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Props, FormcarryResponse } from './lib/types'\nimport { errorHandler, noIdHandler } from './lib/handler'\n\nfunction useForm(props: Props) {\n\tconst { id, debug = true, extraData } = props\n\tconst [submitted, setSubmitted] = useState<boolean>(false)\n\tconst [submitting, setSubmitting] = useState<boolean>(false)\n\tconst [error, setError] = useState(undefined)\n\tconst [response, setResponse] = useState<FormcarryResponse>()\n\n\tuseEffect(() => {\n\t\tif (error && debug) {\n\t\t\terrorHandler(error)\n\t\t}\n\t}, [debug, error])\n\n\tfunction submit(event: React.FormEvent<HTMLFormElement>) {\n\t\t// prevent redirection\n\t\tevent.preventDefault()\n\n\t\tif (!id) {\n\t\t\tnoIdHandler()\n\t\t\treturn\n\t\t}\n\n\t\tconst data = new FormData(event.currentTarget)\n\n\t\tif (typeof extraData === 'object') {\n\t\t\tfor (const item in extraData) {\n\t\t\t\tif (extraData.hasOwnProperty(item)) {\n\t\t\t\t\tdata.append(item, extraData[item])\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// reset states.\n\t\tsetSubmitted(false)\n\t\tsetError(undefined)\n\t\tsetResponse(undefined)\n\n\t\tsetSubmitting(true)\n\n\t\tfetch(`https://formcarry.com/s/${id}`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { Accept: 'application/json' },\n\t\t\tbody: data,\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then((res: FormcarryResponse) => {\n\t\t\t\tif (res.code === 200) {\n\t\t\t\t\tsetSubmitted(true)\n\t\t\t\t\tsetResponse(res)\n\t\t\t\t} else {\n\t\t\t\t\tsetError(res)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tsetError(err)\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tsetSubmitting(false)\n\t\t\t})\n\t}\n\n\treturn { state: { error, response, submitting, submitted }, submit }\n}\n\nexport { useForm }"]},"metadata":{},"sourceType":"script"}